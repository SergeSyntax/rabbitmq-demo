version: "3.9"

name: devops-premade

services:
  rabbitmq:
    image: bitnami/rabbitmq:3.13.3-debian-12-r0
    network_mode: host
    environment:
      - RABBITMQ_USERNAME=admin
      - RABBITMQ_PASSWORD=admin
      - RABBITMQ_MANAGEMENT_BIND_IP=0.0.0.0
      - RABBITMQ_MANAGEMENT_PORT_NUMBER=15672
      - RABBITMQ_NODE_PORT_NUMBER=5672
      - RABBITMQ_ERL_COOKIE=secretcookie
      - RABBITMQ_MANAGEMENT_ALLOW_WEB_ACCESS=true
    volumes:
      - ${CACHE_DIR:-./cache}/volumes/rabbitmq:/bitnami/rabbitmq
      - ./enabled_plugins.conf:/etc/rabbitmq/enabled_plugins
    ports:
      - "15672:15672" # Management console
      - "5672:5672" # RabbitMQ port
    user: "0:0"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 30s
      timeout: 20s
      retries: 3
# version: '3.9'
# services:
#   rabbitmq:
#     image: rabbitmq:3-management
#     container_name: rabbitmq
#     ports:
#       - 8080:15672
#       - 5672:5672
#     healthcheck:
#       test: ["CMD", "rabbitmq-diagnostics", "check_running"]
#       interval: 30s
#       timeout: 10s
#       retries: 3
#   consumer:
#     build:
#       dockerfile: Dockerfile.dev
#       context: ./rabbitmq-consumer-service
#     volumes:
#       - /app/node_modules
#       - './rabbitmq-consumer-service:/app'
#     depends_on:
#       rabbitmq:
#         condition: service_healthy

#   producer:
#     build:
#       dockerfile: Dockerfile.dev
#       context: ./rabbitmq-producer-service
#     volumes:
#       - /app/node_modules
#       - './rabbitmq-producer-service:/app'
#     depends_on:
#       rabbitmq:
#         condition: service_healthy
    # environment:
    #   ALLOW_ANONYMOUS_LOGIN: yes
  # kafka:
  #   image: bitnami/kafka:3
  #   container_name: kafka
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - "9092:9092"
  #     - "9093:9093"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_CFG_ZOOKEEPER_CONNECT: 'zookeeper:2181'
  #     ALLOW_PLAINTEXT_LISTENER: yes
  #     KAFKA_ZOOKEEPER_PROTOCOL: PLAINTEXT
  #     KAFKA_CFG_LISTENERS: 'INTERNAL://:9093,CLIENT://:9092'
  #     KAFKA_CFG_ADVERTISED_LISTENERS: 'INTERNAL://kafka:9093,CLIENT://kafka:9092'
  #     KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: 'CLIENT:PLAINTEXT,INTERNAL:PLAINTEXT'
  #     KAFKA_INTER_BROKER_LISTENER_NAME: 'CLIENT'
  #     KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
#   akhq:
#     image: tchiotludo/akhq:dev
#     container_name: akhq
#     environment:
#       AKHQ_CONFIGURATION: |
#         akhq:
#           connections:
#             docker-kafka-server:
#               properties:
#                 bootstrap.servers: "kafka:9092"
#     ports:
#       - 8001:8080

    # environment:
    #   - REDIS_HOST=redis
    #   - REDIS_PORT=6379

    # environment:
    #   - REDIS_HOST=redis
    #   - REDIS_PORT=6379


    